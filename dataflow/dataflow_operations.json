{
	"name": "dataflow_operations",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "input_dataflow_ds",
						"type": "DatasetReference"
					},
					"name": "inputfile",
					"description": "Customer data as a input."
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "input_dataflow_ds",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          Phone as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as long,",
				"          Country as string,",
				"          RegistrationDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> inputfile",
				"inputfile select(mapColumn(",
				"          CustomerID,",
				"          FirstName,",
				"          LastName,",
				"          Email,",
				"          Phone,",
				"          Address,",
				"          City,",
				"          State,",
				"          ZipCode,",
				"          Country,",
				"          RegistrationDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(FirstName = upper(FirstName),",
				"          LastName = upper(LastName)) ~> derivedColumn1",
				"derivedColumn1 filter(CustomerID>20) ~> filter1",
				"filter1 sort(asc(FirstName, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          Phone as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as string,",
				"          Country as string,",
				"          RegistrationDate as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}